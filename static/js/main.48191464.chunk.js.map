{"version":3,"sources":["components/NavBar/NavBar.tsx","App.tsx","components/HomePage/HomePage.tsx","api.ts","utils/searchHelper.ts","components/SearchLink/SearchLink.tsx","components/PeopleFilters/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","NavBar","className","role","to","App","HomePage","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","PeopleFilters","setSearchParams","sex","query","centuries","cn","type","placeholder","onChange","event","setSearchWith","target","map","century","includes","filter","ch","Loader","PersonLink","person","getPersonByName","personName","useParams","motherInList","motherName","fatherInList","fatherName","slug","name","born","died","PeopleTable","people","filteredPeople","faSort","get","faOrder","useState","sortedPeople","setSortedPeople","currentName","find","useEffect","linkParameter","charAt","toUpperCase","slice","sort","order","onClick","sortBy","newSortedPeople","a","b","aValue","bValue","localeCompare","handleSortClick","PeoplePage","setPeople","errorMessage","setErrorMessage","loading","setLoading","getAll","getPeople","catch","finally","length","result","some","toLowerCase","Math","floor","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.48191464.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass\n= ({ isActive }: { isActive: boolean }) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink className={getLinkClass} to=\"/people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { NavBar } from './components/NavBar/NavBar';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { getSearchWith, SearchParams } from '../../utils/searchHelper';\nimport { SearchLink } from '../SearchLink/SearchLink';\n\ntype Props = {\n  searchParams: URLSearchParams;\n  setSearchParams: (param: string) => void;\n  sex: string;\n  query: string;\n  centuries: string[];\n};\n\nexport const PeopleFilters: React.FC<Props> = ({\n  searchParams,\n  setSearchParams,\n  sex,\n  query,\n  centuries,\n}) => {\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchWith({ query: event.target.value || null });\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={cn({ 'is-active': !sex })}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={cn({ 'is-active': sex === 'm' })}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={cn({ 'is-active': sex === 'f' })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {['16', '17', '18', '19', '20'].map(century => (\n              <SearchLink\n                key={century}\n                params={{\n                  centuries: centuries.includes(century)\n                    ? centuries.filter(ch => century !== ch)\n                    : [...centuries, century],\n                }}\n                data-cy=\"century\"\n                className={\n                  cn('button mr-1', { 'is-info': centuries.includes(century) })\n                }\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              params={{ centuries: null }}\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          params={{ sex: null, query: null, centuries: null }}\n          className=\"button is-link is-outlined is-fullwidth\"\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person;\n  getPersonByName: (personName: string | null) => Person | null;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  getPersonByName,\n}) => {\n  const { personName } = useParams();\n  const [searchParams] = useSearchParams();\n  const motherInList = getPersonByName(person.motherName);\n  const fatherInList = getPersonByName(person.fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={\n        cn({ 'has-background-warning': person.slug === personName })\n      }\n    >\n      <td>\n        <Link\n          className={cn({ 'has-text-danger': person.sex === 'f' })}\n          to={`/people/${person.slug}?${searchParams.toString()}`}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      {getPersonByName(person.motherName)\n        ? (\n          <td>\n            <Link\n              className=\"has-text-danger\"\n              to={motherInList ? `/people/${motherInList.slug}?${searchParams.toString()}` : '#'}\n            >\n              {person.motherName}\n            </Link>\n          </td>\n        )\n        : (\n          <td>{person.motherName || '-'}</td>\n        )}\n\n      {getPersonByName(person.fatherName)\n        ? (\n          <td>\n            <Link\n              to={fatherInList ? `/people/${fatherInList.slug}?${searchParams.toString()}` : '#'}\n            >\n              {person.fatherName}\n            </Link>\n          </td>\n        )\n        : (\n          <td>{person.fatherName || '-'}</td>\n        )}\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { SearchLink } from '../SearchLink/SearchLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[];\n  filteredPeople: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, filteredPeople }) => {\n  const [searchParams] = useSearchParams();\n  const faSort = searchParams.get('sort') || '';\n  const faOrder = searchParams.get('order') || '';\n  const [sortedPeople, setSortedPeople] = useState([...filteredPeople]);\n\n  const getPersonByName = (currentName: string | null): Person | null => {\n    return people.find(person => person.name === currentName) || null;\n  };\n\n  useEffect(() => {\n    setSortedPeople([...filteredPeople]);\n  }, [filteredPeople]);\n\n  const handleSortClick = (sortBy: keyof Person) => {\n    const newSortedPeople = [...filteredPeople];\n\n    newSortedPeople.sort((a, b) => {\n      const aValue = a[sortBy] as string | number | undefined | null;\n      const bValue = b[sortBy] as string | number | undefined | null;\n\n      if (aValue == null || bValue == null) {\n        return 0;\n      }\n\n      if (typeof aValue === 'number' && typeof bValue === 'number') {\n        if (!faSort && !faOrder) {\n          return aValue - bValue;\n        }\n\n        if (faSort && !faOrder) {\n          return bValue - aValue;\n        }\n      }\n\n      if (typeof aValue === 'string' && typeof bValue === 'string') {\n        if (!faSort && !faOrder) {\n          return aValue.localeCompare(bValue);\n        }\n\n        if (faSort && !faOrder) {\n          return bValue.localeCompare(aValue);\n        }\n      }\n\n      return 0;\n    });\n\n    setSortedPeople(newSortedPeople);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n\n      <thead>\n        <tr>\n          {(['name', 'sex', 'born', 'died'] as Array<keyof Person>\n          ).map(linkParameter => (\n            <th>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {linkParameter.charAt(0).toUpperCase() + linkParameter.slice(1)}\n\n                <SearchLink\n                  params={faSort !== linkParameter ? {\n                    sort: linkParameter,\n                    order: null,\n                  } : {\n                    sort: faOrder ? null : linkParameter,\n                    order: faOrder ? null : linkParameter,\n                  }}\n                  onClick={() => handleSortClick(linkParameter)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('fas fa-sort', {\n                      'fa-sort-up': (faSort === linkParameter) && !faOrder,\n                      'fa-sort-down': (faSort === linkParameter) && faOrder,\n                    })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeople.map(person => (\n          <PersonLink\n            key={person.name}\n            person={person}\n            getPersonByName={getPersonByName}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleFilters } from '../PeopleFilters/PeopleFilters';\nimport { Loader } from '../Loader/Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const filteredPeople\n    = (!sex && !query && !centuries.length)\n      ? people : (() => {\n        let result = [...people];\n\n        if (sex !== '') {\n          result = result.filter(person => person.sex === sex);\n        }\n\n        if (query !== '') {\n          result = result.filter(person => (\n            [person.name, person.motherName, person.fatherName].some(name => {\n              return name && name.toLowerCase().includes(query.toLowerCase());\n            })));\n        }\n\n        if (centuries.length !== 0) {\n          result = result.filter(person => {\n            return centuries.includes(\n              (Math.floor(person.born / 100) + 1).toString(),\n            );\n          });\n        }\n\n        return result;\n      })();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!loading && !errorMessage && !!people.length && (\n              <PeopleFilters\n                searchParams={searchParams}\n                setSearchParams={setSearchParams}\n                sex={sex}\n                query={query}\n                centuries={centuries}\n              />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {loading && <Loader />}\n\n              {errorMessage && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {errorMessage}\n                </p>\n              )}\n\n              {!people.length && !loading && !errorMessage && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!filteredPeople.length && !loading && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {!loading && !errorMessage && !!people.length\n              && !!filteredPeople.length && (\n                <PeopleTable people={people} filteredPeople={filteredPeople} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"..\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personName\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}